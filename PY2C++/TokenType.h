#ifndef TOKENTYPE_H
#define TOKENTYPE_H
#include <iostream>
#include <cstring>


enum TokenType{
    // Single character tokens
    LEFT_PARAN, RIGHT_PARAN, LEFT_BRACE, RIGHT_BRACE, LEFT_SQUARE, RIGHT_SQUARE,
    COMMA, DOT, MINUS, PLUS, COLON, SLASH, SEMICOLON,
    RIGHTARROW, ELLIPSIS, COLONEQUAL, 

    // One or Two character tokens
    LOGICAL_NOT, NOT_EQUAL,
    EQUAL, EQUAL_EQUAL,
    GREATER, GREATER_EQUAL,
    LESS, LESS_EQUAL,
    STAR, POWER, DOUBLE_SLASH,
    VBAR, AMPER, PERCENT, TILDE, CIRCUMFLEX, LEFTSHIFT,
    RIGHTSHIFT, PLUSEQUAL, MINEQUAL, STAREQUAL,
    SLASHEQUAL, PERCENTEQUAL, AMPEREQUAL, VBAREQUAL, 
    CIRCUMFLEXEQUAL, LEFTSHIFTEQUAL, RIGHTSHIFTEQUAL, POWEREQUAL,
    AT, ATEQUAL, 


    // Literals
    IDENTIFIER, STRING, NUMBER,

    //Keywords
    FALSE, NONE, TRUE, AND, AS, ASSERT, ASYNC,AWAIT, BREAK,
    CLASS, CONTINUE, DEF, DEL, ELIF, ELSE, EXCEPT, FINALLY, FOR, FROM,
    GLOBAL, IF, IMPORT, IN, IS, LAMBDA, NONLOCAL, NOT, OR, PASS,
    RAISE, RETURN, TRY, WHILE, WITH, YIELD,

    EOFile
};


extern std :: string enumToString[86];

std :: string enum2str(TokenType type);

#endif